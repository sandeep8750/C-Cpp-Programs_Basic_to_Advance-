/*
//1. Write a function to find the greatest number from the given array of any size. (TSRS)
int maxnumber(int a[],int );
int main()
{

int i,n;
printf("Enter size of array :  ");
scanf("%d",&n);
int a[n];
printf("%d is greatest number in array " ,maxnumber(a,n));
return 0;
}


int maxnumber(int a[],int n)
{
    int max=0 ,i;
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);

    for(i=0;i<n;i++)
    {
    if(max<a[i])
        max=a[i];
    }
    return max ;
}
*/
/*
2. Write a function to find the smallest number from the given array of any size. (TSRS)
int main()
{
    int i,n;
    printf("Enter size of array : ");
    scanf("%d",&n);
    int a[n];

    printf("%d is smallest element in array " ,findsmallest(a,n));
}

int findsmallest(int a[],int n)
{
    int small,i;

    printf("Enter array element : \n");
    for(i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }

    for(i=0;i<n;i++)
    {
        if(a[i]<small)
            {
                    small=a[i];
            }
    }
    return small;
}
*/

/*
3. Write a function to sort an array of any size. (TSRS)
int main()
{
    int i,n,j,temp;
    printf("Enter size of array : ");
    scanf("%d",&n);
    int a[n];
    printf("Enter array element : \n");
    for(i=0;i<n;i++)
    {
        printf("%d : ",i);
        scanf("%d",&a[i]);
    }

     for(i=0;i<n;i++)
     {
         for(j=0;j<n;j++)
         {
             for(j=0;j<n;j++)
             {
               if(a[i]>a[j])
               {
                temp=a[j];
               a[j]=a[i];
               a[i]=temp;
               }
         }
     }
}

printf("Sorted array is : \n");
for(i=0;i<n;i++)
    printf("%d",a[i]);

}
*/


/*
4. Write a function to rotate an array by n position in d direction. The d is an indicative
value for left or right. (For example, if array of size 5 is [32, 29, 40, 12, 70]; n is 2 and
d is left, then the resulting array after left rotation 2 times is [40, 12, 70, 32, 29] )

int main()
{
    int n;
    printf("Enter size of array : ");
    scanf("%d",&n);
    int a[n];

    shiftR(a,n);
}

void shiftR(int a[],int n)
{
    int i,j,k,temp;
    printf("Enter array element : \n");
    for(i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }

    printf("how many times right rotate");
    scanf("%d",&k);
    for(j=0;j<k;j++)
    {
        temp=a[0];
    for(i=0;i<n-1;i++)
    {
        a[i]=a[i+1];
    }
    a[n-1]=temp;
    }

    for(i=0;i<n;i++)
    printf("%d ",a[i]);

}
*/

/*
//5. Write a function to find the first occurrence of adjacent duplicate values in the array.
//Function has to return the value of the element.

void occur(int a[], int );
int main()
{
int n,i;
printf("Enter size of array : ");
scanf("%d",&n);
int a[i];
occur(a,n);

}

void occur(int a[], int n)
{
    int i;
printf("Enter array element \n");
for(i=0;i<n;i++)
{
 scanf("%d",&a[i]);
}

for(i=0;i<n;i++)
{
    if(a[i]==a[i+1])
    break;
}
printf(" Adjcent duplicate element in array is : %d",a[i]);
}
*/

/*
//6. Write a function in C to read n number of values in an array and display it in reverse order.
int main()
{
    int n;
    printf("Enter array size ");
    scanf("%d",&n);
    int a[n];
    disinrevers(a,n);
}

void disinrevers(int a[],int n)
{
    int i;
    printf("Enter array element \n");
    for(i=0;i<n;i++)
    scanf("%d",&a[i]);
printf("Printing array in reverse  order \n");
for(i=n-1;i>=0;i--)
    printf("%d",a[i]);

}
*/

/*
//7. Write a function in C to count a total number of duplicate elements in an array.
int main()
{
    int n;
    printf("Enter size of array : ");
    scanf("%d",&n);
    int a[n];
    countduplicate(a ,n);
}

int countduplicate(int a[],int n)
{
    int i,j,count=0;
    printf("Enter array element : \n");
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);

    for(i=0;i<n;i++)
    {
        for(j=i+1;j<=n;j++)
        {
            if(a[i]==a[j])
                count++;
        }
    }
    printf("%d duplicate element in array ",count);
}
*/

/*
//8. Write a function in C to print all unique elements in an array.
int main()
{
    int n;
    printf("Enter size of array : ");
    scanf("%d",&n);
    int a[n];
    unique(a ,n);
}

void unique(int a[],int n)
{
    int i,j,count=0,temp[50];
    printf("Enter array element : \n");
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);

    for(i=0;i<n;i++)
    {
        count=0;
        for(j=0;j<n;j++)
        {
            if(i!=j)
            {
                if(a[i]==a[j])
                    count++;
            }

        }
        if(count==0)
            printf("\n%d  ",a[i]);
    }
}
*/

/*
//9. Write a function same size C to merge two arrays of the same size sorted in descending order.
int main()
{
    int i,j,size,temp;
    int a[50],b[50];

    printf("Enter size of both array : ");
    scanf("%d",&size);

    printf("Ente first array element : \n");
    for(i=0;i<size;i++)
    {
        scanf("%d",&a[i]);
    }

    for(i=0;i<size;i++)
    {
        for(j=i+1;j<size;j++)
        {
            if(a[i]>a[j])
            {
                    temp=a[i];
                    a[i]=a[j];
                    a[j]=temp;
            }
        }
    }

    printf("first sorted array is : \n");
    for(i=0;i<size;i++)
        printf("%d  ",a[i]);

        printf("\nEnter second array element : \n");
        for(j=0;j<size;j++)
        {
            scanf("%d",&b[j]);
        }
    for(i=0;i<size;i++)
    {
        for(j=i+1;j<size;j++)
        {
            if(b[i]>b[j])
            {
                    temp=b[i];
                    b[i]=b[j];
                    b[j]=temp;
            }
        }
    }

    printf("\nsecond sorted array is ");
    for(j=0;j<size;j++)
        printf("%d  ",b[j]);
mergearray(a,b);
        return 0;
}

void mergearray(int a[],int b[])
{
    int c[50];
    int i=0,j=0,k;

    for(k=0;k<10;k++)
    {
        if(a[i]<b[j])
        {
            c[k]=a[i];;
            i++;
        }
        else
        {
            c[k]=b[j];
            j++;
        }
    }

    printf("\n function work ");
    for(k=0;k<10;k++)
        printf("%d ",c[k]);
}
*/

/*
 //10.Write a program in C to count the frequency of each element of an array

int main()
{
    char string[50];
    int i,j,temp[50],n,count;
    printf("Enter a string : ");
    gets(string);

    for(i=0;string[i];i++)
        n=i;

        for(i=0;i<=n;i++)
        {
            count=1;
            if(string[i]!=-1)
            {
            for(j=i+1;j<=n;j++)
            {
                if(string[i]==string[j])
                {
                    count++;
                    string[j]=-1;
                }
            }
            temp[i]=count;
            }
        }

        for(i=0;i<=n;i++)
        {
            if(string[i]!=-1)
            {
                printf("\n%c is %d time ",string[i],temp[i]);
            }
        }
}

*/
