/*
//1. Write a program to calculate the sum of two matrices each of order 3x3.
int main()
{
    int c,r;
    int i,j;
    printf("Enter the size of Row and Column: \n");
    scanf("%d  %d",&c,&r);

    int a[c][r];
    int b[c][r];
    int C[c][r];

    printf("Enter the first matrix element : \n");
    for(i=0;i<c;i++)
    {
        for(j=0;j<r;j++)
        {
           printf("%d %d : " ,i,j);
           scanf("%d",&a[i][j]);
        }
    }

printf("\nEntered first matrix is \n");
for(i=0;i<c;i++)
    {
        for(j=0;j<r;j++)
        {
           printf("%d\t",a[i][j]);
        }
        printf("\n");
    }

    printf("\nEnter the second matrix element : \n");
    for(i=0;i<c;i++)
    {
        for(j=0;j<r;j++)
        {
           printf("%d %d : " ,i,j);
           scanf("%d",&b[i][j]);
        }
    }
printf("\nEntered second matrix is \n");
for(i=0;i<c;i++)
    {
        for(j=0;j<r;j++)
        {
         printf("%d\t",b[i][j]);
        }
        printf("\n");
    }


    for(i=0;i<c;i++)
    {
        for(j=0;j<r;j++)
        {
            C[i][j]=a[i][j]+b[i][j];
        }
    }

    printf("sum of entered matrices is \n");
    for(i=0;i<c;i++)
    {
        for(j=0;j<r;j++)
        {
            printf("%d\t",C[i][j]);
        }
        printf("\n");
    }
    return ;
}
*/
/*
//2. Write a program to calculate the product of two matrices each of order 3x3.
int main()
{
    int c,r;
    int i,j,k,sum=0;
    printf("Enter the size of Row and Column: \n");
    scanf("%d  %d",&c,&r);

    int a[c][r];
    int b[c][r];
    int C[c][r];

    printf("Enter the first matrix element : \n");
    for(i=0;i<c;i++)
    {
        for(j=0;j<r;j++)
        {
           printf("%d %d : " ,i,j);
           scanf("%d",&a[i][j]);
        }
    }

printf("\nEntered first matrix is \n");
for(i=0;i<c;i++)
    {
        for(j=0;j<r;j++)
        {
           printf("%d\t",a[i][j]);
        }
        printf("\n");
    }

    printf("\nEnter the second matrix element : \n");
    for(i=0;i<c;i++)
    {
        for(j=0;j<r;j++)
        {
           printf("%d %d : " ,i,j);
           scanf("%d",&b[i][j]);
        }
    }
printf("\nEntered second matrix is \n");
for(i=0;i<c;i++)
    {
        for(j=0;j<r;j++)
        {
         printf("%d\t",b[i][j]);
        }
        printf("\n");
    }

for(i=0;i<c;i++)
{
    for(j=0;j<r;j++)
    {
        sum=0;
        for(k=0;k<c;k++)
        {
            sum=sum+a[i][k]*b[k][j];
        }
        C[i][j]=sum;
    }
}

printf("product of two matrix is \n");
for(i=0;i<c;i++)
{
for(j=0;j<r;j++)
{
        printf("%d\t",C[i][j]);
}
        printf("\n");
}

return;
}
*/

/*
//3. Write a program in C to find the transpose of a given matrix.
int main()
{
    int size,i,j;
    printf("Enter matrix size : ");
    scanf("%d",&size);

    int a[size][size],b[size][size];

    printf("Enter matrix element : ");
    for(i=0;i<size;i++)
    {
        for(j=0;j<size;j++)
        {
            printf("%d %d : ",i,j);
            scanf("%d",&a[i][j]);
        }
    }

    printf("Entered matrix is : \n");
    for(i=0;i<size ;i++)
    {
        for(j=0;j<size;j++)
        {
           printf("%d\t",a[i][j]);
        }
        printf("\n");
    }

    for(i=0;i<size ;i++)
    {
        for(j=0;j<size;j++)
        {
         b[i][j]=a[j][i];
        }
    }

    printf("After transpose matrix is \n");
    for(i=0;i<size ;i++)
    {
        for(j=0;j<size;j++)
        {
            printf("%d\t",b[i][j]);
        }
        printf("\n");
    }
}
*/

/*
//4. Write a program in C to find the sum of right diagonals of a matrix.
int main()
{
    int size,i,j,sum=0;
    printf("Enter size of matris : ");
    scanf("%d",&size);

    int a[size][size];

    printf("Enter matrix element : ");
    for(i=0;i<size;i++)
    {
        for(j=0;j<size;j++)
        {
            printf("%d %d : ",i,j);
            scanf("%d",&a[i][j]);
        }
    }
    printf("Entered matrix is \n");
    for(i=0;i<size;i++)
    {
        for(j=0;j<size;j++)
        {
            printf("%d\t",a[i][j]);
        }
        printf("\n");
    }

    for(i=0;i<size;i++)
    {
        for(j=0;j<size;j++)
        {
            if(i==j)
           sum=sum+a[i][j];
        }
    }

    printf("sum of right diagonal of matrix is : %d",sum);

    return;
}
*/

/*
//5. Write a program in C to find the sum of left diagonals of a matrix.
int main()
{
    int size,i,j,sum=0;
    printf("Enter size of matris : ");
    scanf("%d",&size);

    int a[size][size];

    printf("Enter matrix element : ");
    for(i=0;i<size;i++)
    {
        for(j=0;j<size;j++)
        {
            printf("%d %d : ",i,j);
            scanf("%d",&a[i][j]);
        }
    }
    printf("Entered matrix is \n");
    for(i=0;i<size;i++)
    {
        for(j=0;j<size;j++)
        {
            printf("%d\t",a[i][j]);
        }
        printf("\n");
    }

    for(i=0;i<size;i++)
    {
        for(j=0;j<size;j++)
        {
        if(i+j==size-1)
        sum=sum+a[i][j];
        }
    }

    printf("sum of left diagonal of matrix is : %d",sum);

    return;
}
*/

/*
//6. Write a program in C to find the sum of rows and columns of a Matrix.
int main()
{
    int size , i ,j ,sum=0;
    printf("Enter size of matrix : ");
    scanf("%d",&size);
    int a[size][size],rsum[10],csum[10];
    printf("Enter matrix element : \n");
    for(i=0;i<size ;i++)
    {
        for(j=0;j<size ;j++)
        {
            printf("%d %d : ",i,j);
            scanf("%d",&a[i][j]);
        }
    }

    printf("Entered matrix is\n");
    for(i=0;i<size ;i++)
    {
        for(j=0;j<size ;j++)
        {
           printf("%d\t",a[i][j]);
        }
        printf("\n");
    }

    //for columns
    for(i=0;i<size ;i++)
    {
        csum[i]=0;
        for(j=0;j<size ;j++)
        {
         csum[i]=csum[i]+a[i][j];
        }
    }


//for Rows
    for(i=0;i<size ;i++)
    {
        rsum[i]=0;
        for(j=0;j<size ;j++)
        {
         rsum[i]=rsum[i]+a[j][i];
        }
    }

      printf("The sum or rows and columns of the matrix is :\n");
      for(i=0;i<size;i++)
      {
	   for(j=0;j<size;j++)
	      printf("% 4d",a[i][j]);
	   printf("% 8d",csum[i]);
	   printf("\n");
       }
       printf("\n");
	    for(j=0;j<size;j++)
             {
	        printf("% 4d",rsum[j]);
             }
            printf("\n\n");
  }
*/

/*
//7. Write a program in C to print or display the lower triangular of a given matrix.
int main()
{
    int size,i,j;
    printf("Enter matrix size : ");
    scanf("%d",&size);
    int a[size][size];

    printf("Enter element of matrix \n");
    for(i=0;i<size;i++)
    {
        for(j=0;j<size;j++)
        {
            printf("%d %d : ",i,j);
            scanf("%d",&a[i][j]);
        }
    }

    for(i=0;i<size ; i++)
    {
            for(j=0;j<size ;j++)
            {
                if(i>j)
                    a[i][j]=0;
            }
    }

    printf("Displaying lower matrix \n");
    for(i=0;i<size;i++)
    {
        for(j=0;j<size;j++)
        {
    printf("%d\t",a[i][j]);
        }
        printf("\n");
    }

}
*/

/*
//8. Write a program in C to print or display an upper triangular matrix.
int main()
{
    int size,i,j;
    printf("Enter matrix size : ");
    scanf("%d",&size);
    int a[size][size];

    printf("Enter element of matrix \n");
    for(i=0;i<size;i++)
    {
        for(j=0;j<size;j++)
        {
            printf("%d %d : ",i,j);
            scanf("%d",&a[i][j]);
        }
    }

    for(i=0;i<size ; i++)
    {
            for(j=0;j<size ;j++)
            {
                if(i<j)
                    a[i][j]=0;
            }
    }

    printf("Displaying lower matrix \n");
    for(i=0;i<size;i++)
    {
        for(j=0;j<size;j++)
        {
    printf("%d\t",a[i][j]);
        }
        printf("\n");
    }

}
*/

/*
//9. Write a program in C to accept a matrix and determine whether it is a sparse matrix.
int main()
{
    int size,i,j,count=0;
    printf("Enter matrix size : ");
    scanf("%d",&size);
    int a[size][size];

    printf("Enter element of matrix \n");
    for(i=0;i<size;i++)
    {
        for(j=0;j<size;j++)
        {
            printf("%d %d : ",i,j);
            scanf("%d",&a[i][j]);
        }
    }

    printf("the entered matrix is \n");
    for(i=0;i<size;i++)
    {
        for(j=0;j<size;j++)
        {
    printf("%d\t",a[i][j]);
        }
        printf("\n");
    }
    for(i=0;i<size;i++)
    {
              for(j=0;j<size;j++)
              {
                    if(a[i][j]==0)
                    {
                         count++;
                    }
              }
    }
    if(count>size/2)
    {
        printf("Entered array is sparse array \n");
    }
    else
        printf("Entered matrix is not sparse matrix \n");

    printf("there are %d number of zero ",count );
}
*/


/*
//10. Write a program in C to find the row with maximum number of 1s.
int main()
{
    int size,i,j,max=0,sum=0;
    printf("enter size of array : ");
    scanf("%d",&size);

    int a[size][size],index;

    printf("Enter matrix element : \n");
    for(i=0;i<size;i++)
    {
        for(j=0;j<size;j++)
        {
            printf("%d %d : ",i,j);
            scanf("%d",&a[i][j]);
        }
    }

    for(i=0;i<size;i++)
    {
        sum=0;
        for(j=0;j<size;j++)
        {
             if(a[i][j]==1)
             {
                 sum=a[i][j]+sum;
                 if(sum>max)
                 {
                    max=sum;
                    index=i;
                 }
             }
        }
    }


    printf("Row with mixmum number of 1s is %d\nnumber of 1 is in row is %d",index+1,max );
}
*/


